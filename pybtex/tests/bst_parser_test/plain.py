from pybtex.bibtex.interpreter import (
    IntegerLiteral, StringLiteral, QuotedVar, Identifier, FunctionLiteral,
)
bst = [[u'ENTRY',
  [Identifier(u'address'),
   Identifier(u'author'),
   Identifier(u'booktitle'),
   Identifier(u'chapter'),
   Identifier(u'edition'),
   Identifier(u'editor'),
   Identifier(u'howpublished'),
   Identifier(u'institution'),
   Identifier(u'journal'),
   Identifier(u'key'),
   Identifier(u'month'),
   Identifier(u'note'),
   Identifier(u'number'),
   Identifier(u'organization'),
   Identifier(u'pages'),
   Identifier(u'publisher'),
   Identifier(u'school'),
   Identifier(u'series'),
   Identifier(u'title'),
   Identifier(u'type'),
   Identifier(u'volume'),
   Identifier(u'year')],
  [],
  [Identifier(u'label')]],
 [u'INTEGERS',
  [Identifier(u'output.state'),
   Identifier(u'before.all'),
   Identifier(u'mid.sentence'),
   Identifier(u'after.sentence'),
   Identifier(u'after.block')]],
 [u'FUNCTION',
  [Identifier(u'init.state.consts')],
  [IntegerLiteral(0),
   QuotedVar(u'before.all'),
   Identifier(u':='),
   IntegerLiteral(1),
   QuotedVar(u'mid.sentence'),
   Identifier(u':='),
   IntegerLiteral(2),
   QuotedVar(u'after.sentence'),
   Identifier(u':='),
   IntegerLiteral(3),
   QuotedVar(u'after.block'),
   Identifier(u':=')]],
 [u'STRINGS', [Identifier(u's'), Identifier(u't')]],
 [u'FUNCTION',
  [Identifier(u'output.nonnull')],
  [QuotedVar(u's'),
   Identifier(u':='),
   Identifier(u'output.state'),
   Identifier(u'mid.sentence'),
   Identifier(u'='),
   FunctionLiteral([StringLiteral(u', '), Identifier(u'*'), Identifier(u'write$')]),
   FunctionLiteral([Identifier(u'output.state'), Identifier(u'after.block'), Identifier(u'='), FunctionLiteral([Identifier(u'add.period$'), Identifier(u'write$'), Identifier(u'newline$'), StringLiteral(u'\\newblock '), Identifier(u'write$')]), FunctionLiteral([Identifier(u'output.state'), Identifier(u'before.all'), Identifier(u'='), QuotedVar(u'write$'), FunctionLiteral([Identifier(u'add.period$'), StringLiteral(u' '), Identifier(u'*'), Identifier(u'write$')]), Identifier(u'if$')]), Identifier(u'if$'), Identifier(u'mid.sentence'), QuotedVar(u'output.state'), Identifier(u':=')]),
   Identifier(u'if$'),
   Identifier(u's')]],
 [u'FUNCTION',
  [Identifier(u'output')],
  [Identifier(u'duplicate$'),
   Identifier(u'empty$'),
   QuotedVar(u'pop$'),
   QuotedVar(u'output.nonnull'),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'output.check')],
  [QuotedVar(u't'),
   Identifier(u':='),
   Identifier(u'duplicate$'),
   Identifier(u'empty$'),
   FunctionLiteral([Identifier(u'pop$'), StringLiteral(u'empty '), Identifier(u't'), Identifier(u'*'), StringLiteral(u' in '), Identifier(u'*'), Identifier(u'cite$'), Identifier(u'*'), Identifier(u'warning$')]),
   QuotedVar(u'output.nonnull'),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'output.bibitem')],
  [Identifier(u'newline$'),
   StringLiteral(u'\\bibitem{'),
   Identifier(u'write$'),
   Identifier(u'cite$'),
   Identifier(u'write$'),
   StringLiteral(u'}'),
   Identifier(u'write$'),
   Identifier(u'newline$'),
   StringLiteral(u''),
   Identifier(u'before.all'),
   QuotedVar(u'output.state'),
   Identifier(u':=')]],
 [u'FUNCTION',
  [Identifier(u'fin.entry')],
  [Identifier(u'add.period$'),
   Identifier(u'write$'),
   Identifier(u'newline$')]],
 [u'FUNCTION',
  [Identifier(u'new.block')],
  [Identifier(u'output.state'),
   Identifier(u'before.all'),
   Identifier(u'='),
   QuotedVar(u'skip$'),
   FunctionLiteral([Identifier(u'after.block'), QuotedVar(u'output.state'), Identifier(u':=')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'new.sentence')],
  [Identifier(u'output.state'),
   Identifier(u'after.block'),
   Identifier(u'='),
   QuotedVar(u'skip$'),
   FunctionLiteral([Identifier(u'output.state'), Identifier(u'before.all'), Identifier(u'='), QuotedVar(u'skip$'), FunctionLiteral([Identifier(u'after.sentence'), QuotedVar(u'output.state'), Identifier(u':=')]), Identifier(u'if$')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'not')],
  [FunctionLiteral([IntegerLiteral(0)]),
   FunctionLiteral([IntegerLiteral(1)]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'and')],
  [QuotedVar(u'skip$'),
   FunctionLiteral([Identifier(u'pop$'), IntegerLiteral(0)]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'or')],
  [FunctionLiteral([Identifier(u'pop$'), IntegerLiteral(1)]),
   QuotedVar(u'skip$'),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'new.block.checka')],
  [Identifier(u'empty$'),
   QuotedVar(u'skip$'),
   QuotedVar(u'new.block'),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'new.block.checkb')],
  [Identifier(u'empty$'),
   Identifier(u'swap$'),
   Identifier(u'empty$'),
   Identifier(u'and'),
   QuotedVar(u'skip$'),
   QuotedVar(u'new.block'),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'new.sentence.checka')],
  [Identifier(u'empty$'),
   QuotedVar(u'skip$'),
   QuotedVar(u'new.sentence'),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'new.sentence.checkb')],
  [Identifier(u'empty$'),
   Identifier(u'swap$'),
   Identifier(u'empty$'),
   Identifier(u'and'),
   QuotedVar(u'skip$'),
   QuotedVar(u'new.sentence'),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'field.or.null')],
  [Identifier(u'duplicate$'),
   Identifier(u'empty$'),
   FunctionLiteral([Identifier(u'pop$'), StringLiteral(u'')]),
   QuotedVar(u'skip$'),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'emphasize')],
  [Identifier(u'duplicate$'),
   Identifier(u'empty$'),
   FunctionLiteral([Identifier(u'pop$'), StringLiteral(u'')]),
   FunctionLiteral([StringLiteral(u'{\\em '), Identifier(u'swap$'), Identifier(u'*'), StringLiteral(u'}'), Identifier(u'*')]),
   Identifier(u'if$')]],
 [u'INTEGERS',
  [Identifier(u'nameptr'), Identifier(u'namesleft'), Identifier(u'numnames')]],
 [u'FUNCTION',
  [Identifier(u'format.names')],
  [QuotedVar(u's'),
   Identifier(u':='),
   IntegerLiteral(1),
   QuotedVar(u'nameptr'),
   Identifier(u':='),
   Identifier(u's'),
   Identifier(u'num.names$'),
   QuotedVar(u'numnames'),
   Identifier(u':='),
   Identifier(u'numnames'),
   QuotedVar(u'namesleft'),
   Identifier(u':='),
   FunctionLiteral([Identifier(u'namesleft'), IntegerLiteral(0), Identifier(u'>')]),
   FunctionLiteral([Identifier(u's'), Identifier(u'nameptr'), StringLiteral(u'{ff~}{vv~}{ll}{, jj}'), Identifier(u'format.name$'), QuotedVar(u't'), Identifier(u':='), Identifier(u'nameptr'), IntegerLiteral(1), Identifier(u'>'), FunctionLiteral([Identifier(u'namesleft'), IntegerLiteral(1), Identifier(u'>'), FunctionLiteral([StringLiteral(u', '), Identifier(u'*'), Identifier(u't'), Identifier(u'*')]), FunctionLiteral([Identifier(u'numnames'), IntegerLiteral(2), Identifier(u'>'), FunctionLiteral([StringLiteral(u','), Identifier(u'*')]), QuotedVar(u'skip$'), Identifier(u'if$'), Identifier(u't'), StringLiteral(u'others'), Identifier(u'='), FunctionLiteral([StringLiteral(u' et~al.'), Identifier(u'*')]), FunctionLiteral([StringLiteral(u' and '), Identifier(u'*'), Identifier(u't'), Identifier(u'*')]), Identifier(u'if$')]), Identifier(u'if$')]), QuotedVar(u't'), Identifier(u'if$'), Identifier(u'nameptr'), IntegerLiteral(1), Identifier(u'+'), QuotedVar(u'nameptr'), Identifier(u':='), Identifier(u'namesleft'), IntegerLiteral(1), Identifier(u'-'), QuotedVar(u'namesleft'), Identifier(u':=')]),
   Identifier(u'while$')]],
 [u'FUNCTION',
  [Identifier(u'format.authors')],
  [Identifier(u'author'),
   Identifier(u'empty$'),
   FunctionLiteral([StringLiteral(u'')]),
   FunctionLiteral([Identifier(u'author'), Identifier(u'format.names')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'format.editors')],
  [Identifier(u'editor'),
   Identifier(u'empty$'),
   FunctionLiteral([StringLiteral(u'')]),
   FunctionLiteral([Identifier(u'editor'), Identifier(u'format.names'), Identifier(u'editor'), Identifier(u'num.names$'), IntegerLiteral(1), Identifier(u'>'), FunctionLiteral([StringLiteral(u', editors'), Identifier(u'*')]), FunctionLiteral([StringLiteral(u', editor'), Identifier(u'*')]), Identifier(u'if$')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'format.title')],
  [Identifier(u'title'),
   Identifier(u'empty$'),
   FunctionLiteral([StringLiteral(u'')]),
   FunctionLiteral([Identifier(u'title'), StringLiteral(u't'), Identifier(u'change.case$')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'n.dashify')],
  [QuotedVar(u't'),
   Identifier(u':='),
   StringLiteral(u''),
   FunctionLiteral([Identifier(u't'), Identifier(u'empty$'), Identifier(u'not')]),
   FunctionLiteral([Identifier(u't'), IntegerLiteral(1), IntegerLiteral(1), Identifier(u'substring$'), StringLiteral(u'-'), Identifier(u'='), FunctionLiteral([Identifier(u't'), IntegerLiteral(1), IntegerLiteral(2), Identifier(u'substring$'), StringLiteral(u'--'), Identifier(u'='), Identifier(u'not'), FunctionLiteral([StringLiteral(u'--'), Identifier(u'*'), Identifier(u't'), IntegerLiteral(2), Identifier(u'global.max$'), Identifier(u'substring$'), QuotedVar(u't'), Identifier(u':=')]), FunctionLiteral([FunctionLiteral([Identifier(u't'), IntegerLiteral(1), IntegerLiteral(1), Identifier(u'substring$'), StringLiteral(u'-'), Identifier(u'=')]), FunctionLiteral([StringLiteral(u'-'), Identifier(u'*'), Identifier(u't'), IntegerLiteral(2), Identifier(u'global.max$'), Identifier(u'substring$'), QuotedVar(u't'), Identifier(u':=')]), Identifier(u'while$')]), Identifier(u'if$')]), FunctionLiteral([Identifier(u't'), IntegerLiteral(1), IntegerLiteral(1), Identifier(u'substring$'), Identifier(u'*'), Identifier(u't'), IntegerLiteral(2), Identifier(u'global.max$'), Identifier(u'substring$'), QuotedVar(u't'), Identifier(u':=')]), Identifier(u'if$')]),
   Identifier(u'while$')]],
 [u'FUNCTION',
  [Identifier(u'format.date')],
  [Identifier(u'year'),
   Identifier(u'empty$'),
   FunctionLiteral([Identifier(u'month'), Identifier(u'empty$'), FunctionLiteral([StringLiteral(u'')]), FunctionLiteral([StringLiteral(u"there's a month but no year in "), Identifier(u'cite$'), Identifier(u'*'), Identifier(u'warning$'), Identifier(u'month')]), Identifier(u'if$')]),
   FunctionLiteral([Identifier(u'month'), Identifier(u'empty$'), QuotedVar(u'year'), FunctionLiteral([Identifier(u'month'), StringLiteral(u' '), Identifier(u'*'), Identifier(u'year'), Identifier(u'*')]), Identifier(u'if$')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'format.btitle')],
  [Identifier(u'title'), Identifier(u'emphasize')]],
 [u'FUNCTION',
  [Identifier(u'tie.or.space.connect')],
  [Identifier(u'duplicate$'),
   Identifier(u'text.length$'),
   IntegerLiteral(3),
   Identifier(u'<'),
   FunctionLiteral([StringLiteral(u'~')]),
   FunctionLiteral([StringLiteral(u' ')]),
   Identifier(u'if$'),
   Identifier(u'swap$'),
   Identifier(u'*'),
   Identifier(u'*')]],
 [u'FUNCTION',
  [Identifier(u'either.or.check')],
  [Identifier(u'empty$'),
   QuotedVar(u'pop$'),
   FunctionLiteral([StringLiteral(u"can't use both "), Identifier(u'swap$'), Identifier(u'*'), StringLiteral(u' fields in '), Identifier(u'*'), Identifier(u'cite$'), Identifier(u'*'), Identifier(u'warning$')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'format.bvolume')],
  [Identifier(u'volume'),
   Identifier(u'empty$'),
   FunctionLiteral([StringLiteral(u'')]),
   FunctionLiteral([StringLiteral(u'volume'), Identifier(u'volume'), Identifier(u'tie.or.space.connect'), Identifier(u'series'), Identifier(u'empty$'), QuotedVar(u'skip$'), FunctionLiteral([StringLiteral(u' of '), Identifier(u'*'), Identifier(u'series'), Identifier(u'emphasize'), Identifier(u'*')]), Identifier(u'if$'), StringLiteral(u'volume and number'), Identifier(u'number'), Identifier(u'either.or.check')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'format.number.series')],
  [Identifier(u'volume'),
   Identifier(u'empty$'),
   FunctionLiteral([Identifier(u'number'), Identifier(u'empty$'), FunctionLiteral([Identifier(u'series'), Identifier(u'field.or.null')]), FunctionLiteral([Identifier(u'output.state'), Identifier(u'mid.sentence'), Identifier(u'='), FunctionLiteral([StringLiteral(u'number')]), FunctionLiteral([StringLiteral(u'Number')]), Identifier(u'if$'), Identifier(u'number'), Identifier(u'tie.or.space.connect'), Identifier(u'series'), Identifier(u'empty$'), FunctionLiteral([StringLiteral(u"there's a number but no series in "), Identifier(u'cite$'), Identifier(u'*'), Identifier(u'warning$')]), FunctionLiteral([StringLiteral(u' in '), Identifier(u'*'), Identifier(u'series'), Identifier(u'*')]), Identifier(u'if$')]), Identifier(u'if$')]),
   FunctionLiteral([StringLiteral(u'')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'format.edition')],
  [Identifier(u'edition'),
   Identifier(u'empty$'),
   FunctionLiteral([StringLiteral(u'')]),
   FunctionLiteral([Identifier(u'output.state'), Identifier(u'mid.sentence'), Identifier(u'='), FunctionLiteral([Identifier(u'edition'), StringLiteral(u'l'), Identifier(u'change.case$'), StringLiteral(u' edition'), Identifier(u'*')]), FunctionLiteral([Identifier(u'edition'), StringLiteral(u't'), Identifier(u'change.case$'), StringLiteral(u' edition'), Identifier(u'*')]), Identifier(u'if$')]),
   Identifier(u'if$')]],
 [u'INTEGERS', [Identifier(u'multiresult')]],
 [u'FUNCTION',
  [Identifier(u'multi.page.check')],
  [QuotedVar(u't'),
   Identifier(u':='),
   IntegerLiteral(0),
   QuotedVar(u'multiresult'),
   Identifier(u':='),
   FunctionLiteral([Identifier(u'multiresult'), Identifier(u'not'), Identifier(u't'), Identifier(u'empty$'), Identifier(u'not'), Identifier(u'and')]),
   FunctionLiteral([Identifier(u't'), IntegerLiteral(1), IntegerLiteral(1), Identifier(u'substring$'), Identifier(u'duplicate$'), StringLiteral(u'-'), Identifier(u'='), Identifier(u'swap$'), Identifier(u'duplicate$'), StringLiteral(u','), Identifier(u'='), Identifier(u'swap$'), StringLiteral(u'+'), Identifier(u'='), Identifier(u'or'), Identifier(u'or'), FunctionLiteral([IntegerLiteral(1), QuotedVar(u'multiresult'), Identifier(u':=')]), FunctionLiteral([Identifier(u't'), IntegerLiteral(2), Identifier(u'global.max$'), Identifier(u'substring$'), QuotedVar(u't'), Identifier(u':=')]), Identifier(u'if$')]),
   Identifier(u'while$'),
   Identifier(u'multiresult')]],
 [u'FUNCTION',
  [Identifier(u'format.pages')],
  [Identifier(u'pages'),
   Identifier(u'empty$'),
   FunctionLiteral([StringLiteral(u'')]),
   FunctionLiteral([Identifier(u'pages'), Identifier(u'multi.page.check'), FunctionLiteral([StringLiteral(u'pages'), Identifier(u'pages'), Identifier(u'n.dashify'), Identifier(u'tie.or.space.connect')]), FunctionLiteral([StringLiteral(u'page'), Identifier(u'pages'), Identifier(u'tie.or.space.connect')]), Identifier(u'if$')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'format.vol.num.pages')],
  [Identifier(u'volume'),
   Identifier(u'field.or.null'),
   Identifier(u'number'),
   Identifier(u'empty$'),
   QuotedVar(u'skip$'),
   FunctionLiteral([StringLiteral(u'('), Identifier(u'number'), Identifier(u'*'), StringLiteral(u')'), Identifier(u'*'), Identifier(u'*'), Identifier(u'volume'), Identifier(u'empty$'), FunctionLiteral([StringLiteral(u"there's a number but no volume in "), Identifier(u'cite$'), Identifier(u'*'), Identifier(u'warning$')]), QuotedVar(u'skip$'), Identifier(u'if$')]),
   Identifier(u'if$'),
   Identifier(u'pages'),
   Identifier(u'empty$'),
   QuotedVar(u'skip$'),
   FunctionLiteral([Identifier(u'duplicate$'), Identifier(u'empty$'), FunctionLiteral([Identifier(u'pop$'), Identifier(u'format.pages')]), FunctionLiteral([StringLiteral(u':'), Identifier(u'*'), Identifier(u'pages'), Identifier(u'n.dashify'), Identifier(u'*')]), Identifier(u'if$')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'format.chapter.pages')],
  [Identifier(u'chapter'),
   Identifier(u'empty$'),
   QuotedVar(u'format.pages'),
   FunctionLiteral([Identifier(u'type'), Identifier(u'empty$'), FunctionLiteral([StringLiteral(u'chapter')]), FunctionLiteral([Identifier(u'type'), StringLiteral(u'l'), Identifier(u'change.case$')]), Identifier(u'if$'), Identifier(u'chapter'), Identifier(u'tie.or.space.connect'), Identifier(u'pages'), Identifier(u'empty$'), QuotedVar(u'skip$'), FunctionLiteral([StringLiteral(u', '), Identifier(u'*'), Identifier(u'format.pages'), Identifier(u'*')]), Identifier(u'if$')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'format.in.ed.booktitle')],
  [Identifier(u'booktitle'),
   Identifier(u'empty$'),
   FunctionLiteral([StringLiteral(u'')]),
   FunctionLiteral([Identifier(u'editor'), Identifier(u'empty$'), FunctionLiteral([StringLiteral(u'In '), Identifier(u'booktitle'), Identifier(u'emphasize'), Identifier(u'*')]), FunctionLiteral([StringLiteral(u'In '), Identifier(u'format.editors'), Identifier(u'*'), StringLiteral(u', '), Identifier(u'*'), Identifier(u'booktitle'), Identifier(u'emphasize'), Identifier(u'*')]), Identifier(u'if$')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'empty.misc.check')],
  [Identifier(u'author'),
   Identifier(u'empty$'),
   Identifier(u'title'),
   Identifier(u'empty$'),
   Identifier(u'howpublished'),
   Identifier(u'empty$'),
   Identifier(u'month'),
   Identifier(u'empty$'),
   Identifier(u'year'),
   Identifier(u'empty$'),
   Identifier(u'note'),
   Identifier(u'empty$'),
   Identifier(u'and'),
   Identifier(u'and'),
   Identifier(u'and'),
   Identifier(u'and'),
   Identifier(u'and'),
   Identifier(u'key'),
   Identifier(u'empty$'),
   Identifier(u'not'),
   Identifier(u'and'),
   FunctionLiteral([StringLiteral(u'all relevant fields are empty in '), Identifier(u'cite$'), Identifier(u'*'), Identifier(u'warning$')]),
   QuotedVar(u'skip$'),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'format.thesis.type')],
  [Identifier(u'type'),
   Identifier(u'empty$'),
   QuotedVar(u'skip$'),
   FunctionLiteral([Identifier(u'pop$'), Identifier(u'type'), StringLiteral(u't'), Identifier(u'change.case$')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'format.tr.number')],
  [Identifier(u'type'),
   Identifier(u'empty$'),
   FunctionLiteral([StringLiteral(u'Technical Report')]),
   QuotedVar(u'type'),
   Identifier(u'if$'),
   Identifier(u'number'),
   Identifier(u'empty$'),
   FunctionLiteral([StringLiteral(u't'), Identifier(u'change.case$')]),
   FunctionLiteral([Identifier(u'number'), Identifier(u'tie.or.space.connect')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'format.article.crossref')],
  [Identifier(u'key'),
   Identifier(u'empty$'),
   FunctionLiteral([Identifier(u'journal'), Identifier(u'empty$'), FunctionLiteral([StringLiteral(u'need key or journal for '), Identifier(u'cite$'), Identifier(u'*'), StringLiteral(u' to crossref '), Identifier(u'*'), Identifier(u'crossref'), Identifier(u'*'), Identifier(u'warning$'), StringLiteral(u'')]), FunctionLiteral([StringLiteral(u'In {\\em '), Identifier(u'journal'), Identifier(u'*'), StringLiteral(u'\\/}'), Identifier(u'*')]), Identifier(u'if$')]),
   FunctionLiteral([StringLiteral(u'In '), Identifier(u'key'), Identifier(u'*')]),
   Identifier(u'if$'),
   StringLiteral(u' \\cite{'),
   Identifier(u'*'),
   Identifier(u'crossref'),
   Identifier(u'*'),
   StringLiteral(u'}'),
   Identifier(u'*')]],
 [u'FUNCTION',
  [Identifier(u'format.crossref.editor')],
  [Identifier(u'editor'),
   IntegerLiteral(1),
   StringLiteral(u'{vv~}{ll}'),
   Identifier(u'format.name$'),
   Identifier(u'editor'),
   Identifier(u'num.names$'),
   Identifier(u'duplicate$'),
   IntegerLiteral(2),
   Identifier(u'>'),
   FunctionLiteral([Identifier(u'pop$'), StringLiteral(u' et~al.'), Identifier(u'*')]),
   FunctionLiteral([IntegerLiteral(2), Identifier(u'<'), QuotedVar(u'skip$'), FunctionLiteral([Identifier(u'editor'), IntegerLiteral(2), StringLiteral(u'{ff }{vv }{ll}{ jj}'), Identifier(u'format.name$'), StringLiteral(u'others'), Identifier(u'='), FunctionLiteral([StringLiteral(u' et~al.'), Identifier(u'*')]), FunctionLiteral([StringLiteral(u' and '), Identifier(u'*'), Identifier(u'editor'), IntegerLiteral(2), StringLiteral(u'{vv~}{ll}'), Identifier(u'format.name$'), Identifier(u'*')]), Identifier(u'if$')]), Identifier(u'if$')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'format.book.crossref')],
  [Identifier(u'volume'),
   Identifier(u'empty$'),
   FunctionLiteral([StringLiteral(u'empty volume in '), Identifier(u'cite$'), Identifier(u'*'), StringLiteral(u"'s crossref of "), Identifier(u'*'), Identifier(u'crossref'), Identifier(u'*'), Identifier(u'warning$'), StringLiteral(u'In ')]),
   FunctionLiteral([StringLiteral(u'Volume'), Identifier(u'volume'), Identifier(u'tie.or.space.connect'), StringLiteral(u' of '), Identifier(u'*')]),
   Identifier(u'if$'),
   Identifier(u'editor'),
   Identifier(u'empty$'),
   Identifier(u'editor'),
   Identifier(u'field.or.null'),
   Identifier(u'author'),
   Identifier(u'field.or.null'),
   Identifier(u'='),
   Identifier(u'or'),
   FunctionLiteral([Identifier(u'key'), Identifier(u'empty$'), FunctionLiteral([Identifier(u'series'), Identifier(u'empty$'), FunctionLiteral([StringLiteral(u'need editor, key, or series for '), Identifier(u'cite$'), Identifier(u'*'), StringLiteral(u' to crossref '), Identifier(u'*'), Identifier(u'crossref'), Identifier(u'*'), Identifier(u'warning$'), StringLiteral(u''), Identifier(u'*')]), FunctionLiteral([StringLiteral(u'{\\em '), Identifier(u'*'), Identifier(u'series'), Identifier(u'*'), StringLiteral(u'\\/}'), Identifier(u'*')]), Identifier(u'if$')]), FunctionLiteral([Identifier(u'key'), Identifier(u'*')]), Identifier(u'if$')]),
   FunctionLiteral([Identifier(u'format.crossref.editor'), Identifier(u'*')]),
   Identifier(u'if$'),
   StringLiteral(u' \\cite{'),
   Identifier(u'*'),
   Identifier(u'crossref'),
   Identifier(u'*'),
   StringLiteral(u'}'),
   Identifier(u'*')]],
 [u'FUNCTION',
  [Identifier(u'format.incoll.inproc.crossref')],
  [Identifier(u'editor'),
   Identifier(u'empty$'),
   Identifier(u'editor'),
   Identifier(u'field.or.null'),
   Identifier(u'author'),
   Identifier(u'field.or.null'),
   Identifier(u'='),
   Identifier(u'or'),
   FunctionLiteral([Identifier(u'key'), Identifier(u'empty$'), FunctionLiteral([Identifier(u'booktitle'), Identifier(u'empty$'), FunctionLiteral([StringLiteral(u'need editor, key, or booktitle for '), Identifier(u'cite$'), Identifier(u'*'), StringLiteral(u' to crossref '), Identifier(u'*'), Identifier(u'crossref'), Identifier(u'*'), Identifier(u'warning$'), StringLiteral(u'')]), FunctionLiteral([StringLiteral(u'In {\\em '), Identifier(u'booktitle'), Identifier(u'*'), StringLiteral(u'\\/}'), Identifier(u'*')]), Identifier(u'if$')]), FunctionLiteral([StringLiteral(u'In '), Identifier(u'key'), Identifier(u'*')]), Identifier(u'if$')]),
   FunctionLiteral([StringLiteral(u'In '), Identifier(u'format.crossref.editor'), Identifier(u'*')]),
   Identifier(u'if$'),
   StringLiteral(u' \\cite{'),
   Identifier(u'*'),
   Identifier(u'crossref'),
   Identifier(u'*'),
   StringLiteral(u'}'),
   Identifier(u'*')]],
 [u'FUNCTION',
  [Identifier(u'article')],
  [Identifier(u'output.bibitem'),
   Identifier(u'format.authors'),
   StringLiteral(u'author'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'format.title'),
   StringLiteral(u'title'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'crossref'),
   Identifier(u'missing$'),
   FunctionLiteral([Identifier(u'journal'), Identifier(u'emphasize'), StringLiteral(u'journal'), Identifier(u'output.check'), Identifier(u'format.vol.num.pages'), Identifier(u'output'), Identifier(u'format.date'), StringLiteral(u'year'), Identifier(u'output.check')]),
   FunctionLiteral([Identifier(u'format.article.crossref'), Identifier(u'output.nonnull'), Identifier(u'format.pages'), Identifier(u'output')]),
   Identifier(u'if$'),
   Identifier(u'new.block'),
   Identifier(u'note'),
   Identifier(u'output'),
   Identifier(u'fin.entry')]],
 [u'FUNCTION',
  [Identifier(u'book')],
  [Identifier(u'output.bibitem'),
   Identifier(u'author'),
   Identifier(u'empty$'),
   FunctionLiteral([Identifier(u'format.editors'), StringLiteral(u'author and editor'), Identifier(u'output.check')]),
   FunctionLiteral([Identifier(u'format.authors'), Identifier(u'output.nonnull'), Identifier(u'crossref'), Identifier(u'missing$'), FunctionLiteral([StringLiteral(u'author and editor'), Identifier(u'editor'), Identifier(u'either.or.check')]), QuotedVar(u'skip$'), Identifier(u'if$')]),
   Identifier(u'if$'),
   Identifier(u'new.block'),
   Identifier(u'format.btitle'),
   StringLiteral(u'title'),
   Identifier(u'output.check'),
   Identifier(u'crossref'),
   Identifier(u'missing$'),
   FunctionLiteral([Identifier(u'format.bvolume'), Identifier(u'output'), Identifier(u'new.block'), Identifier(u'format.number.series'), Identifier(u'output'), Identifier(u'new.sentence'), Identifier(u'publisher'), StringLiteral(u'publisher'), Identifier(u'output.check'), Identifier(u'address'), Identifier(u'output')]),
   FunctionLiteral([Identifier(u'new.block'), Identifier(u'format.book.crossref'), Identifier(u'output.nonnull')]),
   Identifier(u'if$'),
   Identifier(u'format.edition'),
   Identifier(u'output'),
   Identifier(u'format.date'),
   StringLiteral(u'year'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'note'),
   Identifier(u'output'),
   Identifier(u'fin.entry')]],
 [u'FUNCTION',
  [Identifier(u'booklet')],
  [Identifier(u'output.bibitem'),
   Identifier(u'format.authors'),
   Identifier(u'output'),
   Identifier(u'new.block'),
   Identifier(u'format.title'),
   StringLiteral(u'title'),
   Identifier(u'output.check'),
   Identifier(u'howpublished'),
   Identifier(u'address'),
   Identifier(u'new.block.checkb'),
   Identifier(u'howpublished'),
   Identifier(u'output'),
   Identifier(u'address'),
   Identifier(u'output'),
   Identifier(u'format.date'),
   Identifier(u'output'),
   Identifier(u'new.block'),
   Identifier(u'note'),
   Identifier(u'output'),
   Identifier(u'fin.entry')]],
 [u'FUNCTION',
  [Identifier(u'inbook')],
  [Identifier(u'output.bibitem'),
   Identifier(u'author'),
   Identifier(u'empty$'),
   FunctionLiteral([Identifier(u'format.editors'), StringLiteral(u'author and editor'), Identifier(u'output.check')]),
   FunctionLiteral([Identifier(u'format.authors'), Identifier(u'output.nonnull'), Identifier(u'crossref'), Identifier(u'missing$'), FunctionLiteral([StringLiteral(u'author and editor'), Identifier(u'editor'), Identifier(u'either.or.check')]), QuotedVar(u'skip$'), Identifier(u'if$')]),
   Identifier(u'if$'),
   Identifier(u'new.block'),
   Identifier(u'format.btitle'),
   StringLiteral(u'title'),
   Identifier(u'output.check'),
   Identifier(u'crossref'),
   Identifier(u'missing$'),
   FunctionLiteral([Identifier(u'format.bvolume'), Identifier(u'output'), Identifier(u'format.chapter.pages'), StringLiteral(u'chapter and pages'), Identifier(u'output.check'), Identifier(u'new.block'), Identifier(u'format.number.series'), Identifier(u'output'), Identifier(u'new.sentence'), Identifier(u'publisher'), StringLiteral(u'publisher'), Identifier(u'output.check'), Identifier(u'address'), Identifier(u'output')]),
   FunctionLiteral([Identifier(u'format.chapter.pages'), StringLiteral(u'chapter and pages'), Identifier(u'output.check'), Identifier(u'new.block'), Identifier(u'format.book.crossref'), Identifier(u'output.nonnull')]),
   Identifier(u'if$'),
   Identifier(u'format.edition'),
   Identifier(u'output'),
   Identifier(u'format.date'),
   StringLiteral(u'year'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'note'),
   Identifier(u'output'),
   Identifier(u'fin.entry')]],
 [u'FUNCTION',
  [Identifier(u'incollection')],
  [Identifier(u'output.bibitem'),
   Identifier(u'format.authors'),
   StringLiteral(u'author'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'format.title'),
   StringLiteral(u'title'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'crossref'),
   Identifier(u'missing$'),
   FunctionLiteral([Identifier(u'format.in.ed.booktitle'), StringLiteral(u'booktitle'), Identifier(u'output.check'), Identifier(u'format.bvolume'), Identifier(u'output'), Identifier(u'format.number.series'), Identifier(u'output'), Identifier(u'format.chapter.pages'), Identifier(u'output'), Identifier(u'new.sentence'), Identifier(u'publisher'), StringLiteral(u'publisher'), Identifier(u'output.check'), Identifier(u'address'), Identifier(u'output'), Identifier(u'format.edition'), Identifier(u'output'), Identifier(u'format.date'), StringLiteral(u'year'), Identifier(u'output.check')]),
   FunctionLiteral([Identifier(u'format.incoll.inproc.crossref'), Identifier(u'output.nonnull'), Identifier(u'format.chapter.pages'), Identifier(u'output')]),
   Identifier(u'if$'),
   Identifier(u'new.block'),
   Identifier(u'note'),
   Identifier(u'output'),
   Identifier(u'fin.entry')]],
 [u'FUNCTION',
  [Identifier(u'inproceedings')],
  [Identifier(u'output.bibitem'),
   Identifier(u'format.authors'),
   StringLiteral(u'author'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'format.title'),
   StringLiteral(u'title'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'crossref'),
   Identifier(u'missing$'),
   FunctionLiteral([Identifier(u'format.in.ed.booktitle'), StringLiteral(u'booktitle'), Identifier(u'output.check'), Identifier(u'format.bvolume'), Identifier(u'output'), Identifier(u'format.number.series'), Identifier(u'output'), Identifier(u'format.pages'), Identifier(u'output'), Identifier(u'address'), Identifier(u'empty$'), FunctionLiteral([Identifier(u'organization'), Identifier(u'publisher'), Identifier(u'new.sentence.checkb'), Identifier(u'organization'), Identifier(u'output'), Identifier(u'publisher'), Identifier(u'output'), Identifier(u'format.date'), StringLiteral(u'year'), Identifier(u'output.check')]), FunctionLiteral([Identifier(u'address'), Identifier(u'output.nonnull'), Identifier(u'format.date'), StringLiteral(u'year'), Identifier(u'output.check'), Identifier(u'new.sentence'), Identifier(u'organization'), Identifier(u'output'), Identifier(u'publisher'), Identifier(u'output')]), Identifier(u'if$')]),
   FunctionLiteral([Identifier(u'format.incoll.inproc.crossref'), Identifier(u'output.nonnull'), Identifier(u'format.pages'), Identifier(u'output')]),
   Identifier(u'if$'),
   Identifier(u'new.block'),
   Identifier(u'note'),
   Identifier(u'output'),
   Identifier(u'fin.entry')]],
 [u'FUNCTION', [Identifier(u'conference')], [Identifier(u'inproceedings')]],
 [u'FUNCTION',
  [Identifier(u'manual')],
  [Identifier(u'output.bibitem'),
   Identifier(u'author'),
   Identifier(u'empty$'),
   FunctionLiteral([Identifier(u'organization'), Identifier(u'empty$'), QuotedVar(u'skip$'), FunctionLiteral([Identifier(u'organization'), Identifier(u'output.nonnull'), Identifier(u'address'), Identifier(u'output')]), Identifier(u'if$')]),
   FunctionLiteral([Identifier(u'format.authors'), Identifier(u'output.nonnull')]),
   Identifier(u'if$'),
   Identifier(u'new.block'),
   Identifier(u'format.btitle'),
   StringLiteral(u'title'),
   Identifier(u'output.check'),
   Identifier(u'author'),
   Identifier(u'empty$'),
   FunctionLiteral([Identifier(u'organization'), Identifier(u'empty$'), FunctionLiteral([Identifier(u'address'), Identifier(u'new.block.checka'), Identifier(u'address'), Identifier(u'output')]), QuotedVar(u'skip$'), Identifier(u'if$')]),
   FunctionLiteral([Identifier(u'organization'), Identifier(u'address'), Identifier(u'new.block.checkb'), Identifier(u'organization'), Identifier(u'output'), Identifier(u'address'), Identifier(u'output')]),
   Identifier(u'if$'),
   Identifier(u'format.edition'),
   Identifier(u'output'),
   Identifier(u'format.date'),
   Identifier(u'output'),
   Identifier(u'new.block'),
   Identifier(u'note'),
   Identifier(u'output'),
   Identifier(u'fin.entry')]],
 [u'FUNCTION',
  [Identifier(u'mastersthesis')],
  [Identifier(u'output.bibitem'),
   Identifier(u'format.authors'),
   StringLiteral(u'author'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'format.title'),
   StringLiteral(u'title'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   StringLiteral(u"Master's thesis"),
   Identifier(u'format.thesis.type'),
   Identifier(u'output.nonnull'),
   Identifier(u'school'),
   StringLiteral(u'school'),
   Identifier(u'output.check'),
   Identifier(u'address'),
   Identifier(u'output'),
   Identifier(u'format.date'),
   StringLiteral(u'year'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'note'),
   Identifier(u'output'),
   Identifier(u'fin.entry')]],
 [u'FUNCTION',
  [Identifier(u'misc')],
  [Identifier(u'output.bibitem'),
   Identifier(u'format.authors'),
   Identifier(u'output'),
   Identifier(u'title'),
   Identifier(u'howpublished'),
   Identifier(u'new.block.checkb'),
   Identifier(u'format.title'),
   Identifier(u'output'),
   Identifier(u'howpublished'),
   Identifier(u'new.block.checka'),
   Identifier(u'howpublished'),
   Identifier(u'output'),
   Identifier(u'format.date'),
   Identifier(u'output'),
   Identifier(u'new.block'),
   Identifier(u'note'),
   Identifier(u'output'),
   Identifier(u'fin.entry'),
   Identifier(u'empty.misc.check')]],
 [u'FUNCTION',
  [Identifier(u'phdthesis')],
  [Identifier(u'output.bibitem'),
   Identifier(u'format.authors'),
   StringLiteral(u'author'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'format.btitle'),
   StringLiteral(u'title'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   StringLiteral(u'PhD thesis'),
   Identifier(u'format.thesis.type'),
   Identifier(u'output.nonnull'),
   Identifier(u'school'),
   StringLiteral(u'school'),
   Identifier(u'output.check'),
   Identifier(u'address'),
   Identifier(u'output'),
   Identifier(u'format.date'),
   StringLiteral(u'year'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'note'),
   Identifier(u'output'),
   Identifier(u'fin.entry')]],
 [u'FUNCTION',
  [Identifier(u'proceedings')],
  [Identifier(u'output.bibitem'),
   Identifier(u'editor'),
   Identifier(u'empty$'),
   FunctionLiteral([Identifier(u'organization'), Identifier(u'output')]),
   FunctionLiteral([Identifier(u'format.editors'), Identifier(u'output.nonnull')]),
   Identifier(u'if$'),
   Identifier(u'new.block'),
   Identifier(u'format.btitle'),
   StringLiteral(u'title'),
   Identifier(u'output.check'),
   Identifier(u'format.bvolume'),
   Identifier(u'output'),
   Identifier(u'format.number.series'),
   Identifier(u'output'),
   Identifier(u'address'),
   Identifier(u'empty$'),
   FunctionLiteral([Identifier(u'editor'), Identifier(u'empty$'), FunctionLiteral([Identifier(u'publisher'), Identifier(u'new.sentence.checka')]), FunctionLiteral([Identifier(u'organization'), Identifier(u'publisher'), Identifier(u'new.sentence.checkb'), Identifier(u'organization'), Identifier(u'output')]), Identifier(u'if$'), Identifier(u'publisher'), Identifier(u'output'), Identifier(u'format.date'), StringLiteral(u'year'), Identifier(u'output.check')]),
   FunctionLiteral([Identifier(u'address'), Identifier(u'output.nonnull'), Identifier(u'format.date'), StringLiteral(u'year'), Identifier(u'output.check'), Identifier(u'new.sentence'), Identifier(u'editor'), Identifier(u'empty$'), QuotedVar(u'skip$'), FunctionLiteral([Identifier(u'organization'), Identifier(u'output')]), Identifier(u'if$'), Identifier(u'publisher'), Identifier(u'output')]),
   Identifier(u'if$'),
   Identifier(u'new.block'),
   Identifier(u'note'),
   Identifier(u'output'),
   Identifier(u'fin.entry')]],
 [u'FUNCTION',
  [Identifier(u'techreport')],
  [Identifier(u'output.bibitem'),
   Identifier(u'format.authors'),
   StringLiteral(u'author'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'format.title'),
   StringLiteral(u'title'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'format.tr.number'),
   Identifier(u'output.nonnull'),
   Identifier(u'institution'),
   StringLiteral(u'institution'),
   Identifier(u'output.check'),
   Identifier(u'address'),
   Identifier(u'output'),
   Identifier(u'format.date'),
   StringLiteral(u'year'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'note'),
   Identifier(u'output'),
   Identifier(u'fin.entry')]],
 [u'FUNCTION',
  [Identifier(u'unpublished')],
  [Identifier(u'output.bibitem'),
   Identifier(u'format.authors'),
   StringLiteral(u'author'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'format.title'),
   StringLiteral(u'title'),
   Identifier(u'output.check'),
   Identifier(u'new.block'),
   Identifier(u'note'),
   StringLiteral(u'note'),
   Identifier(u'output.check'),
   Identifier(u'format.date'),
   Identifier(u'output'),
   Identifier(u'fin.entry')]],
 [u'FUNCTION', [Identifier(u'default.type')], [Identifier(u'misc')]],
 [u'MACRO', [Identifier(u'jan')], [StringLiteral(u'January')]],
 [u'MACRO', [Identifier(u'feb')], [StringLiteral(u'February')]],
 [u'MACRO', [Identifier(u'mar')], [StringLiteral(u'March')]],
 [u'MACRO', [Identifier(u'apr')], [StringLiteral(u'April')]],
 [u'MACRO', [Identifier(u'may')], [StringLiteral(u'May')]],
 [u'MACRO', [Identifier(u'jun')], [StringLiteral(u'June')]],
 [u'MACRO', [Identifier(u'jul')], [StringLiteral(u'July')]],
 [u'MACRO', [Identifier(u'aug')], [StringLiteral(u'August')]],
 [u'MACRO', [Identifier(u'sep')], [StringLiteral(u'September')]],
 [u'MACRO', [Identifier(u'oct')], [StringLiteral(u'October')]],
 [u'MACRO', [Identifier(u'nov')], [StringLiteral(u'November')]],
 [u'MACRO', [Identifier(u'dec')], [StringLiteral(u'December')]],
 [u'MACRO', [Identifier(u'acmcs')], [StringLiteral(u'ACM Computing Surveys')]],
 [u'MACRO', [Identifier(u'acta')], [StringLiteral(u'Acta Informatica')]],
 [u'MACRO', [Identifier(u'cacm')], [StringLiteral(u'Communications of the ACM')]],
 [u'MACRO',
  [Identifier(u'ibmjrd')],
  [StringLiteral(u'IBM Journal of Research and Development')]],
 [u'MACRO', [Identifier(u'ibmsj')], [StringLiteral(u'IBM Systems Journal')]],
 [u'MACRO',
  [Identifier(u'ieeese')],
  [StringLiteral(u'IEEE Transactions on Software Engineering')]],
 [u'MACRO',
  [Identifier(u'ieeetc')],
  [StringLiteral(u'IEEE Transactions on Computers')]],
 [u'MACRO',
  [Identifier(u'ieeetcad')],
  [StringLiteral(u'IEEE Transactions on Computer-Aided Design of Integrated Circuits')]],
 [u'MACRO', [Identifier(u'ipl')], [StringLiteral(u'Information Processing Letters')]],
 [u'MACRO', [Identifier(u'jacm')], [StringLiteral(u'Journal of the ACM')]],
 [u'MACRO',
  [Identifier(u'jcss')],
  [StringLiteral(u'Journal of Computer and System Sciences')]],
 [u'MACRO',
  [Identifier(u'scp')],
  [StringLiteral(u'Science of Computer Programming')]],
 [u'MACRO', [Identifier(u'sicomp')], [StringLiteral(u'SIAM Journal on Computing')]],
 [u'MACRO',
  [Identifier(u'tocs')],
  [StringLiteral(u'ACM Transactions on Computer Systems')]],
 [u'MACRO',
  [Identifier(u'tods')],
  [StringLiteral(u'ACM Transactions on Database Systems')]],
 [u'MACRO', [Identifier(u'tog')], [StringLiteral(u'ACM Transactions on Graphics')]],
 [u'MACRO',
  [Identifier(u'toms')],
  [StringLiteral(u'ACM Transactions on Mathematical Software')]],
 [u'MACRO',
  [Identifier(u'toois')],
  [StringLiteral(u'ACM Transactions on Office Information Systems')]],
 [u'MACRO',
  [Identifier(u'toplas')],
  [StringLiteral(u'ACM Transactions on Programming Languages and Systems')]],
 [u'MACRO', [Identifier(u'tcs')], [StringLiteral(u'Theoretical Computer Science')]],
 [u'READ'],
 [u'FUNCTION',
  [Identifier(u'sortify')],
  [Identifier(u'purify$'), StringLiteral(u'l'), Identifier(u'change.case$')]],
 [u'INTEGERS', [Identifier(u'len')]],
 [u'FUNCTION',
  [Identifier(u'chop.word')],
  [QuotedVar(u's'),
   Identifier(u':='),
   QuotedVar(u'len'),
   Identifier(u':='),
   Identifier(u's'),
   IntegerLiteral(1),
   Identifier(u'len'),
   Identifier(u'substring$'),
   Identifier(u'='),
   FunctionLiteral([Identifier(u's'), Identifier(u'len'), IntegerLiteral(1), Identifier(u'+'), Identifier(u'global.max$'), Identifier(u'substring$')]),
   QuotedVar(u's'),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'sort.format.names')],
  [QuotedVar(u's'),
   Identifier(u':='),
   IntegerLiteral(1),
   QuotedVar(u'nameptr'),
   Identifier(u':='),
   StringLiteral(u''),
   Identifier(u's'),
   Identifier(u'num.names$'),
   QuotedVar(u'numnames'),
   Identifier(u':='),
   Identifier(u'numnames'),
   QuotedVar(u'namesleft'),
   Identifier(u':='),
   FunctionLiteral([Identifier(u'namesleft'), IntegerLiteral(0), Identifier(u'>')]),
   FunctionLiteral([Identifier(u'nameptr'), IntegerLiteral(1), Identifier(u'>'), FunctionLiteral([StringLiteral(u'   '), Identifier(u'*')]), QuotedVar(u'skip$'), Identifier(u'if$'), Identifier(u's'), Identifier(u'nameptr'), StringLiteral(u'{vv{ } }{ll{ }}{  ff{ }}{  jj{ }}'), Identifier(u'format.name$'), QuotedVar(u't'), Identifier(u':='), Identifier(u'nameptr'), Identifier(u'numnames'), Identifier(u'='), Identifier(u't'), StringLiteral(u'others'), Identifier(u'='), Identifier(u'and'), FunctionLiteral([StringLiteral(u'et al'), Identifier(u'*')]), FunctionLiteral([Identifier(u't'), Identifier(u'sortify'), Identifier(u'*')]), Identifier(u'if$'), Identifier(u'nameptr'), IntegerLiteral(1), Identifier(u'+'), QuotedVar(u'nameptr'), Identifier(u':='), Identifier(u'namesleft'), IntegerLiteral(1), Identifier(u'-'), QuotedVar(u'namesleft'), Identifier(u':=')]),
   Identifier(u'while$')]],
 [u'FUNCTION',
  [Identifier(u'sort.format.title')],
  [QuotedVar(u't'),
   Identifier(u':='),
   StringLiteral(u'A '),
   IntegerLiteral(2),
   StringLiteral(u'An '),
   IntegerLiteral(3),
   StringLiteral(u'The '),
   IntegerLiteral(4),
   Identifier(u't'),
   Identifier(u'chop.word'),
   Identifier(u'chop.word'),
   Identifier(u'chop.word'),
   Identifier(u'sortify'),
   IntegerLiteral(1),
   Identifier(u'global.max$'),
   Identifier(u'substring$')]],
 [u'FUNCTION',
  [Identifier(u'author.sort')],
  [Identifier(u'author'),
   Identifier(u'empty$'),
   FunctionLiteral([Identifier(u'key'), Identifier(u'empty$'), FunctionLiteral([StringLiteral(u'to sort, need author or key in '), Identifier(u'cite$'), Identifier(u'*'), Identifier(u'warning$'), StringLiteral(u'')]), FunctionLiteral([Identifier(u'key'), Identifier(u'sortify')]), Identifier(u'if$')]),
   FunctionLiteral([Identifier(u'author'), Identifier(u'sort.format.names')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'author.editor.sort')],
  [Identifier(u'author'),
   Identifier(u'empty$'),
   FunctionLiteral([Identifier(u'editor'), Identifier(u'empty$'), FunctionLiteral([Identifier(u'key'), Identifier(u'empty$'), FunctionLiteral([StringLiteral(u'to sort, need author, editor, or key in '), Identifier(u'cite$'), Identifier(u'*'), Identifier(u'warning$'), StringLiteral(u'')]), FunctionLiteral([Identifier(u'key'), Identifier(u'sortify')]), Identifier(u'if$')]), FunctionLiteral([Identifier(u'editor'), Identifier(u'sort.format.names')]), Identifier(u'if$')]),
   FunctionLiteral([Identifier(u'author'), Identifier(u'sort.format.names')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'author.organization.sort')],
  [Identifier(u'author'),
   Identifier(u'empty$'),
   FunctionLiteral([Identifier(u'organization'), Identifier(u'empty$'), FunctionLiteral([Identifier(u'key'), Identifier(u'empty$'), FunctionLiteral([StringLiteral(u'to sort, need author, organization, or key in '), Identifier(u'cite$'), Identifier(u'*'), Identifier(u'warning$'), StringLiteral(u'')]), FunctionLiteral([Identifier(u'key'), Identifier(u'sortify')]), Identifier(u'if$')]), FunctionLiteral([StringLiteral(u'The '), IntegerLiteral(4), Identifier(u'organization'), Identifier(u'chop.word'), Identifier(u'sortify')]), Identifier(u'if$')]),
   FunctionLiteral([Identifier(u'author'), Identifier(u'sort.format.names')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'editor.organization.sort')],
  [Identifier(u'editor'),
   Identifier(u'empty$'),
   FunctionLiteral([Identifier(u'organization'), Identifier(u'empty$'), FunctionLiteral([Identifier(u'key'), Identifier(u'empty$'), FunctionLiteral([StringLiteral(u'to sort, need editor, organization, or key in '), Identifier(u'cite$'), Identifier(u'*'), Identifier(u'warning$'), StringLiteral(u'')]), FunctionLiteral([Identifier(u'key'), Identifier(u'sortify')]), Identifier(u'if$')]), FunctionLiteral([StringLiteral(u'The '), IntegerLiteral(4), Identifier(u'organization'), Identifier(u'chop.word'), Identifier(u'sortify')]), Identifier(u'if$')]),
   FunctionLiteral([Identifier(u'editor'), Identifier(u'sort.format.names')]),
   Identifier(u'if$')]],
 [u'FUNCTION',
  [Identifier(u'presort')],
  [Identifier(u'type$'),
   StringLiteral(u'book'),
   Identifier(u'='),
   Identifier(u'type$'),
   StringLiteral(u'inbook'),
   Identifier(u'='),
   Identifier(u'or'),
   QuotedVar(u'author.editor.sort'),
   FunctionLiteral([Identifier(u'type$'), StringLiteral(u'proceedings'), Identifier(u'='), QuotedVar(u'editor.organization.sort'), FunctionLiteral([Identifier(u'type$'), StringLiteral(u'manual'), Identifier(u'='), QuotedVar(u'author.organization.sort'), QuotedVar(u'author.sort'), Identifier(u'if$')]), Identifier(u'if$')]),
   Identifier(u'if$'),
   StringLiteral(u'    '),
   Identifier(u'*'),
   Identifier(u'year'),
   Identifier(u'field.or.null'),
   Identifier(u'sortify'),
   Identifier(u'*'),
   StringLiteral(u'    '),
   Identifier(u'*'),
   Identifier(u'title'),
   Identifier(u'field.or.null'),
   Identifier(u'sort.format.title'),
   Identifier(u'*'),
   IntegerLiteral(1),
   Identifier(u'entry.max$'),
   Identifier(u'substring$'),
   QuotedVar(u'sort.key$'),
   Identifier(u':=')]],
 [u'ITERATE', [Identifier(u'presort')]],
 [u'SORT'],
 [u'STRINGS', [Identifier(u'longest.label')]],
 [u'INTEGERS',
  [Identifier(u'number.label'), Identifier(u'longest.label.width')]],
 [u'FUNCTION',
  [Identifier(u'initialize.longest.label')],
  [StringLiteral(u''),
   QuotedVar(u'longest.label'),
   Identifier(u':='),
   IntegerLiteral(1),
   QuotedVar(u'number.label'),
   Identifier(u':='),
   IntegerLiteral(0),
   QuotedVar(u'longest.label.width'),
   Identifier(u':=')]],
 [u'FUNCTION',
  [Identifier(u'longest.label.pass')],
  [Identifier(u'number.label'),
   Identifier(u'int.to.str$'),
   QuotedVar(u'label'),
   Identifier(u':='),
   Identifier(u'number.label'),
   IntegerLiteral(1),
   Identifier(u'+'),
   QuotedVar(u'number.label'),
   Identifier(u':='),
   Identifier(u'label'),
   Identifier(u'width$'),
   Identifier(u'longest.label.width'),
   Identifier(u'>'),
   FunctionLiteral([Identifier(u'label'), QuotedVar(u'longest.label'), Identifier(u':='), Identifier(u'label'), Identifier(u'width$'), QuotedVar(u'longest.label.width'), Identifier(u':=')]),
   QuotedVar(u'skip$'),
   Identifier(u'if$')]],
 [u'EXECUTE', [Identifier(u'initialize.longest.label')]],
 [u'ITERATE', [Identifier(u'longest.label.pass')]],
 [u'FUNCTION',
  [Identifier(u'begin.bib')],
  [Identifier(u'preamble$'),
   Identifier(u'empty$'),
   QuotedVar(u'skip$'),
   FunctionLiteral([Identifier(u'preamble$'), Identifier(u'write$'), Identifier(u'newline$')]),
   Identifier(u'if$'),
   StringLiteral(u'\\begin{thebibliography}{'),
   Identifier(u'longest.label'),
   Identifier(u'*'),
   StringLiteral(u'}'),
   Identifier(u'*'),
   Identifier(u'write$'),
   Identifier(u'newline$')]],
 [u'EXECUTE', [Identifier(u'begin.bib')]],
 [u'EXECUTE', [Identifier(u'init.state.consts')]],
 [u'ITERATE', [Identifier(u'call.type$')]],
 [u'FUNCTION',
  [Identifier(u'end.bib')],
  [Identifier(u'newline$'),
   StringLiteral(u'\\end{thebibliography}'),
   Identifier(u'write$'),
   Identifier(u'newline$')]],
 [u'EXECUTE', [Identifier(u'end.bib')]]]
